[{"content":"\u003ch1\u003e How I built this website, and how you can too! \u003c/h1\u003e\r\n\u003cp\u003e Hey, thanks for checking out this post. This will be a quick read on how I host and maintain this website! To get started, you'll need a github account, and the following software installed: \u003c/p\u003e\r\n\u003cul\u003e \r\n    \u003cli\u003e git \u003c/li\u003e\r\n    \u003cli\u003e GO programming language \u003c/li\u003e\r\n    \u003cli\u003e Hugo \u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003cp\u003e Depending on what operating system you are using, you may need to install the software differently. I used a Windows computer to create and maintain this site, so I'll be explaining this in that syntax. If you need additional help, you can reach out to me, or check out the official Hugo website's documentation tab for more information.\u003c/p\u003e\r\n\u003cp\u003eIf this is your first time using Git, you may also need to configure git by setting global email and username.\u003c/p\u003e\n\u003ch3\u003e Github \u003c/h3\u003e\r\n\u003cp\u003e To get started, you're going to want to create 2 github repositories and clone them to your computer. The first repository will store the website files where you actively edit and make changes. The other repository will store the static files of the website, which Hugo will automatically generate when you build it with the Hugo command.  \u003c/p\u003e\r\n\u003col\u003e\r\n    \u003cli\u003eStatic File Repository\u003c/li\u003e\r\n        \u003cul\u003e\r\n            \u003cli\u003e When making this repository, name it accordingly with the following ending. For me as it was a personal website, I named the repository \"austinj1522.github.io\". Clone this repository to your local computer.  \u003c/li\u003e\r\n        \u003c/ul\u003e\r\n    \u003cli\u003eActive Repository\u003c/li\u003e\r\n        \u003cul\u003e\r\n            \u003cli\u003e When making this repository, name it whatever you'd like! For me, I named it \"website\" to make organization easier on my end. Clone this repository to your local computer.\u003c/li\u003e\r\n        \u003c/ul\u003e\r\n\u003c/ol\u003e\r\n\u003ch3\u003e Hugo \u003c/h3\u003e\r\n\u003cp\u003eHugo makes building websites incredibly easy. To start, first open a command prompt window and navigate to your active repository, in my case \u0026ldquo;website\u0026rdquo;. Run the following command\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003ehugo new site WebsiteNameHere\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eNext, reopen the window which contains the theme you selected. Copy the github clone link. Change directory to the WebsiteNameHere directory, and then run the following commands.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003e cd themes \u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003e git clone GithubLinkHere \u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eYour new website theme can now use the pre-built theme you selected. Just a couple more steps\u0026hellip;\u003c/p\u003e\n\u003cp\u003eOpen your website and find the config.yaml file. If it doesn\u0026rsquo;t have one, create one! This file will be used to configure the website, and in this case will specify the theme for the site. To do this, open the file and create a new line below \u0026ldquo;title\u0026rdquo; Specify the theme by entering the following (my theme\u0026rsquo;s name is hugo-profile):\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003etheme: hugo-profile\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSome themes may have slightly different syntaxes, be sure to check out the ReadMe of the theme to find out more about variations!\u003c/p\u003e\n\u003cp\u003eYour header of your config.yaml file should look similar to the following, except with your repo and theme names:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ebaseURL: \u0026ldquo;\u003ca href=\"https://austinj1522.github.io\"\u003ehttps://austinj1522.github.io\u003c/a\u003e\u0026rdquo; \u003cbr\u003e\nlanguageCode: \u0026ldquo;en-us\u0026rdquo; \u003cbr\u003e\ntitle: \u0026ldquo;Austin\u0026rsquo;s Website\u0026rdquo; \u003cbr\u003e\ntheme: hugo-profile\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eYour base website should now be running with the theme you selected. To test this, navigate to the WebsiteNameHere repository in your command prompt and run the following command:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003ehugo server\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eYou should see it build and then deploy the site on localhost:1313, may be different in some cases.\u003c/p\u003e\n\u003ch3\u003e Connect Repositories\u003c/h3\u003e\r\n\u003cp\u003eNow that the website has been created, you can begin to add your information and customize it however you\u0026rsquo;d like. The last step is to connect the repositories so that whenever you build the website, it automatically deploys on Github Pages. To do this, we will need to add a git submodule.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen command prompt and naviagate to WebsiteNameHere repository.\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eRun the following command:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003egit submodule add -b main githubLinkHere public\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u0026ldquo;main\u0026rdquo; refers to the branch of the repository you will be committing\u003c/li\u003e\n\u003cli\u003egithubLinkHere should be the github clone link of the Static File        Repository you created earlier. Keep in mind, we haven\u0026rsquo;t touched or used this repository yet apart from cloning it to our local computer and initializing it.\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;public\u0026rdquo; specifies the folder that will be the folder you are deploying from. \u0026ldquo;public\u0026rdquo; is the name of the folder that gets automatically generated whenever you build the website, so that\u0026rsquo;s why we specify \u0026ldquo;public\u0026rdquo;.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo confirm if you have correctly connected the repositories, check the git origins of the public folder, and of your WebsiteNameHere folder. The public folder should  be pulling/pushing to your static file repository, and your WebsiteNameHere folder should be Active Repository\u003c/p\u003e\n\u003cp\u003ePlease make sure you check the ReadME and intructions of the prebuilt theme you select. Not all of them work the same way and some have slight variations in syntax, so to avoid errors, read ahead!\u003c/p\u003e\n","description":null,"image":null,"permalink":"https://austinj1522.github.io/blogs/website/","title":"About this Website!"},{"content":"\u003ch1\u003eWelcome to my personal website!\u003c/h1\u003e\t\n\u003cp\u003e This is my personal website! Feel free to browse to view my education, background, and professional experience. You can also see some of my personal projects and certifications I have taken, or plan on taking in the near future.   \u003c/p\u003e\n\u003cp\u003e My next post will explain how I built this website, and what skills were required to do so. Subsequent posts will explain projects I am actively engaged in, so stick around to find out more! \u003c/p\u003e\n","description":null,"image":null,"permalink":"https://austinj1522.github.io/blogs/first/","title":"Welcome"}]